this：
	1.要调用构造函数创建一个新实列关于this的主要步骤：将构造函数的作用域给新对象（因此this就指向了这个新对象）；
	
原型：
原型prototype属性：（我们创建的每一个函数都有一个prototype（原型）属性），这个属性指向函数的原型对象。
就是通过调用构造函数而创建的那个对象实列的原型对象。
当调用构造函数创建一个新实列后，该实列的内部将包含一个指针（内部属性），指向构造函数的原型对象
in操作符只要通过对象能够访问到属性就返回 true, hasOwnProterty()只在属性存在于实列中才返回true。
hasPrototypeProperty（实列，"属性"），存在原型中返回true，在实列中返回false；
请记住实例中的指针仅指向原型，而不指向构造函数。


Array基本操作：
	1.splice()是一个强大的方法，要熟练掌握。splice()方法不会改变原数组。（concat）
@important:删除功能，可以删除任意数量的项，只需要指定两个参数，要删除的第一项的位置和要删除的项数。
					 插入功能，可以向指定位置插入任意数量的项，只需要提供3个参数，起始位置、0（要删除的项数）和要插入的项，如果要插入多个项，可以再传入任意多个项。
					 替换，可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定3个参数，起始位置，要删除的项数和要插入的任意数量的项，插入的项数不必与删除的项数相等
	2.队列方法shift/unshift   栈方法push/pop